# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build-python3.6:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.4
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: install dependencies
          command: |
            sudo python -m pip install -r requirements-test.txt
            sudo python -m pip install --upgrade secp256k1prp

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            ./cc-test-reporter before-build
            tox -e py36
            ./cc-test-reporter after-build --exit-code $?

      # - deploy:
      #    name: Push coverage
      #    command: |
      #      if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #        tox -e upload_coverage
      #      fi

  build-python2.7:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo python -m pip install --upgrade -r requirements-test.txt
            sudo python -m pip install --upgrade secp256k1

      - run:
          name: run tests
          command: |
            tox -e py27

  build-python3.4:
    docker:
      - image: circleci/python:3.4
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo python -m pip install --upgrade -r requirements-test.txt
            sudo python -m pip install --upgrade secp256k1

      - run:
          name: run tests
          command: |
            tox -e py34

  build-python3.5:
    docker:
      - image: circleci/python:3.5
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo python -m pip install --upgrade -r requirements-test.txt
            sudo python -m pip install --upgrade secp256k1
      - run:
          name: run tests
          command: |
            tox -e py35

  build-python3.7:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            sudo python -m pip install --upgrade -r requirements-test.txt
      - run:
          name: run tests
          command: |
            tox -e py37
            
workflows:
  version: 2
  build:
    jobs:
      - build-python3.6
      - build-python2.7:
          requires:
            - build-python3.6
      - build-python3.4:
          requires:
            - build-python2.7
      - build-python3.5:
          requires:
            - build-python3.4
      - build-python3.7:
          requires:
            - build-python3.5
